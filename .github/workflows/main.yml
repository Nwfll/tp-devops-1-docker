name: CI devops 2025

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test with Maven
        run: mvn clean verify
        working-directory: simple-api
      
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=Nwfll_tp-devops-1-docker -Dsonar.organization=nwfll -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: simple-api

  continuous-deployment:
    needs: test-backend
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          context: simple-api
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: http-server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy-to-server:
  needs: continuous-deployment
  runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH key and known hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H nawfel.bouzidi.takima.cloud >> ~/.ssh/known_hosts

    - name: Run ansible-playbook on remote server
      working-directory: ansible
      run: |
        ansible-playbook -i inventories/setup.yml playbook.yml --private-key ~/.ssh/id_rsa
      env:
        ANSIBLE_HOST_KEY_CHECKING: false

